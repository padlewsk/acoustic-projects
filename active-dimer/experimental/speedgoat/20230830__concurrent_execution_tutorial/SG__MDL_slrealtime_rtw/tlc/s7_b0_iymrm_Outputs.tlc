%implements s7_b0_iymrm_Outputs "C"

%function OutputsForPID(block, system, tid, pid) Output
%if pid == 4
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 4
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T rtb_TmpTaskTransAtSubsystem4I_l;
real_T rtb_TmpTaskTransAtSubsystem4Inp;
real_T rtb_TmpTaskTransAtSubsystem4_k2;
%closefile localVarDecl
%assign tlcOutputsFcnOfS4B9 = OpaqueTLCBlockFcnForMdlRef("Outputs", 4, 9, 1, 2, 0)
%<SLibGenerateExtModeOutput(system)>
/* TaskTransBlk generated from: '<Root>/Subsystem4' */
SESE_block_start_Ax3Zq9pEdy(19U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_4);
SESE_blk_end_Ax3Zq9pEdy(19U);
rtb_TmpTaskTransAtSubsystem4Inp = SG__MDL_DW.TmpTaskTransAtSubsystem5Outport;
/* TaskTransBlk generated from: '<Root>/Subsystem4' */
SESE_block_start_Ax3Zq9pEdy(20U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_5);
SESE_blk_end_Ax3Zq9pEdy(20U);
rtb_TmpTaskTransAtSubsystem4I_l = SG__MDL_DW.TmpTaskTransAtSubsystem5Outpo_o;
/* TaskTransBlk generated from: '<Root>/Subsystem4' */
SESE_block_start_Ax3Zq9pEdy(21U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_6);
SESE_blk_end_Ax3Zq9pEdy(21U);
rtb_TmpTaskTransAtSubsystem4_k2 = SG__MDL_DW.TmpTaskTransAtSubsystem5Outpo_a;
/* TaskTransBlk generated from: '<Root>/Subsystem4' */
SESE_block_start_Ax3Zq9pEdy(22U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_7);
SESE_blk_end_Ax3Zq9pEdy(22U);
/* ModelReference: '<Root>/Subsystem4' incorporates:
 *  TaskTransBlk generated from: '<Root>/Subsystem4'
 */
SESE_block_start_Ax3Zq9pEdy(23U);
%<tlcOutputsFcnOfS4B9>\
SESE_blk_end_Ax3Zq9pEdy(23U);
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput04LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 3
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 3
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%assign tlcOutputsFcnOfS4B5 = OpaqueTLCBlockFcn("Outputs", 4, 5, 1, 3, 0)
%assign   Outputs_open_Subsystem3_4_4 = ""
%openfile Outputs_open_Subsystem3_4_4

/* Outputs for Atomic SubSystem: '<Root>/Subsystem3' */
%closefile Outputs_open_Subsystem3_4_4

%assign    Outputs_body_Subsystem3_4_4 = ""
%openfile  Outputs_body_Subsystem3_4_4

SESE_block_start_Ax3Zq9pEdy(24U);
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,3)
%<SLibCG_TrackCoderDataGroup(4, 1)>
%endif

%<SLibCGIRGenReusableSysCall("SG__MDL_Subsystem", ["%<_modelSS>", "&SG__MDL_B.Subsystem3", "&SG__MDL_DW.Subsystem3", "&SG__MDL_cal->SG__MDL_Subsystem3_cal"], 0, 3, 6, 0, 6, 4)>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
SESE_blk_end_Ax3Zq9pEdy(24U);

%closefile Outputs_body_Subsystem3_4_4

%assign    Outputs_close_Subsystem3_4_4 = ""
%openfile  Outputs_close_Subsystem3_4_4

/* End of Outputs for SubSystem: '<Root>/Subsystem3' */
%closefile Outputs_close_Subsystem3_4_4
%<SLibCG_DumpSSCode(Outputs_open_Subsystem3_4_4, Outputs_body_Subsystem3_4_4, Outputs_close_Subsystem3_4_4)>


/* ToAsyncQueueBlock generated from: '<Root>/Subsystem3' */
SESE_block_start_Ax3Zq9pEdy(25U);
%<tlcOutputsFcnOfS4B5>\
SESE_blk_end_Ax3Zq9pEdy(25U);
/* TaskTransBlk generated from: '<Root>/Subsystem3' */
SG__MDL_DW.TmpTaskTransAtSubsystem3Outport = SG__MDL_B.Subsystem3.Multiply2;
SESE_block_start_Ax3Zq9pEdy(26U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_3);
SESE_blk_end_Ax3Zq9pEdy(26U);
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput03LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 2
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 2
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%assign tlcOutputsFcnOfS4B3 = OpaqueTLCBlockFcn("Outputs", 4, 3, 1, 4, 0)
%assign   Outputs_open_Subsystem2_4_2 = ""
%openfile Outputs_open_Subsystem2_4_2

/* Outputs for Atomic SubSystem: '<Root>/Subsystem2' */
%closefile Outputs_open_Subsystem2_4_2

%assign    Outputs_body_Subsystem2_4_2 = ""
%openfile  Outputs_body_Subsystem2_4_2

SESE_block_start_Ax3Zq9pEdy(27U);
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,3)
%<SLibCG_TrackCoderDataGroup(4, 1)>
%endif

%<SLibCGIRGenReusableSysCall("SG__MDL_Subsystem", ["%<_modelSS>", "&SG__MDL_B.Subsystem2", "&SG__MDL_DW.Subsystem2", "&SG__MDL_cal->SG__MDL_Subsystem2_cal"], 0, 2, 6, 0, 6, 4)>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
SESE_blk_end_Ax3Zq9pEdy(27U);

%closefile Outputs_body_Subsystem2_4_2

%assign    Outputs_close_Subsystem2_4_2 = ""
%openfile  Outputs_close_Subsystem2_4_2

/* End of Outputs for SubSystem: '<Root>/Subsystem2' */
%closefile Outputs_close_Subsystem2_4_2
%<SLibCG_DumpSSCode(Outputs_open_Subsystem2_4_2, Outputs_body_Subsystem2_4_2, Outputs_close_Subsystem2_4_2)>


/* ToAsyncQueueBlock generated from: '<Root>/Subsystem2' */
SESE_block_start_Ax3Zq9pEdy(28U);
%<tlcOutputsFcnOfS4B3>\
SESE_blk_end_Ax3Zq9pEdy(28U);
/* TaskTransBlk generated from: '<Root>/Subsystem2' */
SG__MDL_DW.TmpTaskTransAtSubsystem2Outport = SG__MDL_B.Subsystem2.Multiply2;
SESE_block_start_Ax3Zq9pEdy(29U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_2);
SESE_blk_end_Ax3Zq9pEdy(29U);
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput02LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 1
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 1
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%assign tlcOutputsFcnOfS4B1 = OpaqueTLCBlockFcn("Outputs", 4, 1, 1, 5, 0)
%assign   Outputs_open_Subsystem1_4_0 = ""
%openfile Outputs_open_Subsystem1_4_0

/* Outputs for Atomic SubSystem: '<Root>/Subsystem1' */
%closefile Outputs_open_Subsystem1_4_0

%assign    Outputs_body_Subsystem1_4_0 = ""
%openfile  Outputs_body_Subsystem1_4_0

SESE_block_start_Ax3Zq9pEdy(30U);
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,3)
%<SLibCG_TrackCoderDataGroup(4, 1)>
%endif

%<SLibCGIRGenReusableSysCall("SG__MDL_Subsystem", ["%<_modelSS>", "&SG__MDL_B.Subsystem1", "&SG__MDL_DW.Subsystem1", "&SG__MDL_cal->SG__MDL_Subsystem1_cal"], 0, 1, 6, 0, 6, 4)>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
SESE_blk_end_Ax3Zq9pEdy(30U);

%closefile Outputs_body_Subsystem1_4_0

%assign    Outputs_close_Subsystem1_4_0 = ""
%openfile  Outputs_close_Subsystem1_4_0

/* End of Outputs for SubSystem: '<Root>/Subsystem1' */
%closefile Outputs_close_Subsystem1_4_0
%<SLibCG_DumpSSCode(Outputs_open_Subsystem1_4_0, Outputs_body_Subsystem1_4_0, Outputs_close_Subsystem1_4_0)>


/* ToAsyncQueueBlock generated from: '<Root>/Subsystem1' */
SESE_block_start_Ax3Zq9pEdy(31U);
%<tlcOutputsFcnOfS4B1>\
SESE_blk_end_Ax3Zq9pEdy(31U);
/* TaskTransBlk generated from: '<Root>/Subsystem1' */
SG__MDL_DW.TmpTaskTransAtSubsystem1Outport = SG__MDL_B.Subsystem1.Multiply2;
SESE_block_start_Ax3Zq9pEdy(32U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_1);
SESE_blk_end_Ax3Zq9pEdy(32U);
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput01LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 0
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 0
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%<SLibCGIRAccessLocalDWork(30, 0)> %% ForEach_itr
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T rtb_ImpAsg_InsertedFor_Out1_at_[4];
real_T rtb_TmpSignalConversionAtForEac[4];
real_T rtb_TmpTaskTransAtSubsystem5I_j;
real_T rtb_TmpTaskTransAtSubsystem5Inp;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcOutputsFcnOfS4B7 = OpaqueTLCBlockFcn("Outputs", 4, 7, 1, 6, 0)
/* {S!d69}Outputs for Atomic SubSystem: '<Root>/Subsystem' */
SESE_block_start_Ax3Zq9pEdy(33U);
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("SG__MDL_Subsystem",0,3)
%<SLibCG_TrackCoderDataGroup(4, 1)>
%endif

%<SLibCGIRGenReusableSysCall("SG__MDL_Subsystem", ["%<_modelSS>", "&SG__MDL_B.Subsystem", "&SG__MDL_DW.Subsystem", "&SG__MDL_cal->SG__MDL_Subsystem_cal"], 0, 0, 6, 0, 6, 4)>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
SESE_blk_end_Ax3Zq9pEdy(33U);

/* {E!d69}End of Outputs for SubSystem: '<Root>/Subsystem' */

/* {S!d76}ToAsyncQueueBlock generated from: '<Root>/Subsystem' */
SESE_block_start_Ax3Zq9pEdy(34U);
%<tlcOutputsFcnOfS4B7>\
SESE_blk_end_Ax3Zq9pEdy(34U);
/* {S!d78}TaskTransBlk generated from: '<Root>/Subsystem5' */
SESE_block_start_Ax3Zq9pEdy(35U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_1);
SESE_blk_end_Ax3Zq9pEdy(35U);
rtb_TmpTaskTransAtSubsystem5Inp = SG__MDL_DW.TmpTaskTransAtSubsystem1Outport;
/* {S!d80}TaskTransBlk generated from: '<Root>/Subsystem5' */
SESE_block_start_Ax3Zq9pEdy(36U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_2);
SESE_blk_end_Ax3Zq9pEdy(36U);
rtb_TmpTaskTransAtSubsystem5I_j = SG__MDL_DW.TmpTaskTransAtSubsystem2Outport;
/* {S!d82}TaskTransBlk generated from: '<Root>/Subsystem5' */
SESE_block_start_Ax3Zq9pEdy(37U);
rtw_slrealtime_sem_wait(SG__MDL_DW.sw_buf_3);
SESE_blk_end_Ax3Zq9pEdy(37U);
/* {S!d71}Outputs for Atomic SubSystem: '<Root>/Subsystem5' */
/* {S!d84}SignalConversion generated from: '<S5>/For Each Subsystem' incorporates:
 *  TaskTransBlk generated from: '<Root>/Subsystem5'
 */
rtb_TmpSignalConversionAtForEac[0] = SG__MDL_B.Subsystem.Multiply2;
rtb_TmpSignalConversionAtForEac[1] = rtb_TmpTaskTransAtSubsystem5Inp;
rtb_TmpSignalConversionAtForEac[2] = rtb_TmpTaskTransAtSubsystem5I_j;
rtb_TmpSignalConversionAtForEac[3] = SG__MDL_DW.TmpTaskTransAtSubsystem3Outport;
/* {S!d72}Outputs for Iterator SubSystem: '<S5>/For Each Subsystem' incorporates:
 *  ForEach: '<S6>/For Each'
 */
for (ForEach_itr = 0; ForEach_itr < 4; ForEach_itr++) {
    /* {S!d86}ForEachSliceAssignment generated from: '<S6>/Out1' incorporates:
 *  ForEachSliceSelector generated from: '<S6>/In1'
 */
    rtb_ImpAsg_InsertedFor_Out1_at_[ForEach_itr] = rtb_TmpSignalConversionAtForEac[ForEach_itr];
}
/* {E!d72}End of Outputs for SubSystem: '<S5>/For Each Subsystem' */
/* {E!d71}End of Outputs for SubSystem: '<Root>/Subsystem5' */

/* {S!d88}TaskTransBlk generated from: '<Root>/Subsystem5' */
SG__MDL_DW.TmpTaskTransAtSubsystem5Outport = rtb_ImpAsg_InsertedFor_Out1_at_[0];
SESE_block_start_Ax3Zq9pEdy(38U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_4);
SESE_blk_end_Ax3Zq9pEdy(38U);
/* {S!d90}TaskTransBlk generated from: '<Root>/Subsystem5' */
SG__MDL_DW.TmpTaskTransAtSubsystem5Outpo_o = rtb_ImpAsg_InsertedFor_Out1_at_[1];
SESE_block_start_Ax3Zq9pEdy(39U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_5);
SESE_blk_end_Ax3Zq9pEdy(39U);
/* {S!d92}TaskTransBlk generated from: '<Root>/Subsystem5' */
SG__MDL_DW.TmpTaskTransAtSubsystem5Outpo_a = rtb_ImpAsg_InsertedFor_Out1_at_[2];
SESE_block_start_Ax3Zq9pEdy(40U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_6);
SESE_blk_end_Ax3Zq9pEdy(40U);
/* {S!d94}TaskTransBlk generated from: '<Root>/Subsystem5' */
SG__MDL_DW.TmpTaskTransAtSubsystem5Outpo_i = rtb_ImpAsg_InsertedFor_Out1_at_[3];
SESE_block_start_Ax3Zq9pEdy(41U);
rtw_slrealtime_sem_post(SG__MDL_DW.sw_buf_7);
SESE_blk_end_Ax3Zq9pEdy(41U);
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput00LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%endfunction
%function OutputsFcnProtoTypeForPID(block, system, tid, pid) Output
%if pid == 4
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 4
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 2, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 3
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 3
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 3, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 2
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 2
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 4, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 1
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 1
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 5, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%if pid == 0
%assign ::GlobalCurrentTID = 0
%assign ::GlobalCurrentPID = 0
%assign ::SavedtSS = ::tSimStruct
%assign ::tSimStruct = SLibPartitionGroupingGetRTMVarName(::GlobalCurrentPID, ::GlobalCurrentTID)
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 6, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%assign ::GlobalCurrentPID = []
%assign ::tSimStruct = ::SavedtSS
%assign ::SavedtSS = []
%endif
%endfunction
